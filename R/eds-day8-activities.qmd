---
title: "day 8 activities"
format: html
editor: visual
---

```{r}
library(tidyverse)
library(here)
library(janitor)

library(patchwork)
library(ggrepel)
library(gghighlight)
library(paletteer)
library(gapminder)
library(sf)
```

## Task 1

Just like it takes a lot of work to make a really wonderful graph, it takes effort to make a graph really awful. Put effort and creativity into this - you will learn a lot in the process if you do.

Using the 'space_launches.csv' data (I'll drop this into Slack), create a new .Rmd and create your worst possible graph by customizing (from the ggplot default) in **at least 8 ways** - more encouraged - to make it as terrible as possible. The data were previously shared for #TidyTuesday, and descriptions of dataset & variables can be found [**here**](https://github.com/rfordatascience/tidytuesday/tree/master/data/2019/2019-01-15). You can plot whatever variable(s) you choose, and make whatever graph type you want.

**Once you're done, drop your worst graph (as a .png or .jpg) into the course Slack channel.**

Some ideas:

-   fonts

-   background images

-   coord\_\*

-   panel / plot / geom / text colors

-   point / line patterns and shapes

-   gridline updates

-   tickmark frequency

-   angles

```{r}
space <- read_csv(here('data', 'space_launches.csv'))
```

```{r}
ggplot(data = space, aes(x = launch_date, y = mission))+
  geom_col(aes(fill = mission), color = NA)+
  theme_minimal()+
  scale_fill_paletteer_d(palette = 'ggthemes::manyeys')+
  theme(panel.background = element_rect(color = 'purple', size = 5, fill = 'blue'),
        plot.background = element_rect(fill = 'pink'),
        panel.grid.major = element_line(color = 'green'),
        axis.text.x = element_text(color = 'red'))
```

## **Task 2: Wrangling practice with the SF Greenhouse Gas data**

-   Download the San_Francisco_Communitywide_Greenhouse_Gas_Inventory.csv file (I'll put this in Slack). Information about the data is available [**here**](https://catalog.data.gov/dataset/san-francisco-communitywide-greenhouse-gas-inventory).

-   Read in the SF emissions dataset, then complete the following:

1.  Create a summary table of total annual greenhouse gas emissions (only from Emissions_mtCO2e column) by sector_general

2.  Create a summary table of total annual greenhouse gas emissions (only from Emissions_mtCO2e column) by year and commodity type

3.  Create a subset of the data that only contains observations from 2005 on, only for observations where `Sector_Detail2` contains the pattern "PG&E", then limit to columns `Calendar_Year`, `Sector_Detail2` and `Emissions_mtCO2e`.

```{r}
sf <- read_csv(here('data', 'San_Francisco_Communitywide_Greenhouse_Gas_inventory.csv')) %>% 
  clean_names()
```

```{r}
names(sf)
```

```{r}
sf %>%
  summarize(emissions_mt_co2e, sector_general)
```

```{r}
sf %>%
  summarize(emissions_mt_co2e, calendar_year, commodity_type)
```

1.  Create a subset of the data that only contains observations from 2005 on, only for observations where `Sector_Detail2` contains the pattern "PG&E", then limit to columns `Calendar_Year`, `Sector_Detail2` and `Emissions_mtCO2e`.

```{r}
example <- sf %>% 
  filter(calendar_year== 2005 & str_detect(sector_detail2,'PG&E')) %>% 
  select(calendar_year, sector_detail2, emissions_mt_co2e)
  
```

## **Task 3: Do your data viz best**

Create a finalized graph (as perfect as you can make it) using the San Francisco GHG emissions dataset. **You** get to choose what you want to visualize. You can pick which variables & observations you\'re interested in. You may want to do some wrangling / summarizing first.

Once you\'ve decided on what to plot, create the best graph that you can to communicate what\'s going on with the data.

**Once you\'re done, drop your best graph (as a .png or .jpg) into the course Slack channel.**

```{r}
ggplot(data = sf, aes(x = sector_general, y = emissions_mt_co2e)) +
  geom_col(aes(color = commodity_type, fill = 'red')) + scale_fill_manual(values = c("yellow", "orange"))
```
